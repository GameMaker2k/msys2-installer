schedules:
  - cron: '0 0 * * 0'
    displayName: weekly build
    branches:
      include:
      - master
    always: true

jobs:
  - job: MSYS
    timeoutInMinutes: 360
    pool:
      vmImage: 'windows-2019'
    strategy:
      maxParallel: 5
      matrix:
        x86_64:
          MSYS_DIR: msys64
          BASE_REPO: msys2-ci-base
          ARCH: x86_64
    steps:
      - powershell: |
          (New-Object Net.WebClient).DownloadFile("https://github.com/msys2/msys2-installer/releases/download/2020-06-29/msys2-base-x86_64-20200629.sfx.exe", "sfx.exe")
        displayName: Download MSYS2
      - script: |
          sfx.exe -y -o%CD:~0,2%\
          %CD:~0,2%\$(MSYS_DIR)\usr\bin\bash -lc " "
          %CD:~0,2%\$(MSYS_DIR)\usr\bin\bash -lc "pacman --noconfirm -Syuu"
          %CD:~0,2%\$(MSYS_DIR)\usr\bin\bash -lc "pacman --noconfirm -Syuu"
        displayName: Extract/Install/Update MSYS2
      - script: |
          %CD:~0,2%\$(MSYS_DIR)\usr\bin\bash -lc "pacman --noconfirm -S p7zip tar"
        displayName: Install deps
      - script: |
          set CHERE_INVOKING=yes
          %CD:~0,2%\$(MSYS_DIR)\usr\bin\bash -lc "bash make-msys2-installer; cp msys2-base-$(ARCH)-[0-9]*.sfx.exe msys2-base-$(ARCH)-latest.sfx.exe; cp msys2-$(ARCH)-[0-9]*.exe msys2-$(ARCH)-latest.exe; cp msys2-*.tar.xz msys2-base-$(ARCH)-latest.tar.xz"
        displayName: CI-Build
      - task: CopyFiles@2
        inputs:
          contents: 'msys2-*'
          targetFolder: $(Build.ArtifactStagingDirectory)
        displayName: Copy installer
      - task: GithubRelease@0
        inputs:
          githubConnection: 'msys2-installer-release-connection'
          action: 'edit'
          tag: nightly-$(ARCH)
          assets: '$(Build.ArtifactStagingDirectory)/*'
          assetUploadMode: 'delete'
          addChangeLog: false
        displayName: 'Create GitHub Release'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
      - task: PublishBuildArtifacts@1
        displayName: Publish packages
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: $(MSYS_DIR)
        condition: and(succeeded(), or(ne(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.Reason'], 'PullRequest')))
